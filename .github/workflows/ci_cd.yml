name: CI/CD Pipeline for ETL Pipeline

on:
  push:
    branches:
      - main  # Trigger pipeline on push to the main branch
  pull_request:
    branches:
      - main  # Trigger pipeline on pull requests to the main branch

jobs:
  # Job 1: Set up Python environment, install dependencies and run tests
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'  # Specify Python version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Assuming you have a requirements.txt

      - name: Install additional dependencies for the ETL pipeline
        run: |
          pip install pandas requests kagglehub[pandas-datasets] pymongo schedule

      - name: Lint code with flake8
        run: |
          pip install flake8
          flake8 . --max-line-length=80  # Optional: Check for Python style issues

      - name: Run unit tests
        run: |
          # Run your tests (e.g., pytest, unittest, or another framework)
          pytest  # Or use `python -m unittest discover`

      - name: Run the ETL pipeline script
        run: |
          # Run your ETL pipeline script (or specific Python scripts for tests)
          python etl_pipeline.py  # Change to the name of your main script

  # Job 2: Deploy results to MongoDB (or your desired data storage)
  deploy:
    runs-on: ubuntu-latest
    needs: build  # Make sure this job only runs after the build job succeeds

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Deploy to MongoDB
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}  # Store MongoDB URI as a secret in GitHub
        run: |
          python etl_pipeline.py  # Make sure this triggers the final step where you load data into MongoDB
